version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: hospital
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d hospital"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:123456@postgres:5432/hospital
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/dags/credentials.json:/opt/airflow/dags/credentials.json
      - /var/run/docker.sock:/var/run/docker.sock

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - postgres
      - airflow-webserver
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://admin:123456@postgres:5432/hospital
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/dags/credentials.json:/opt/airflow/dags/credentials.json
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: ["airflow", "scheduler"]

  dbt:
    build:
      context: .
      dockerfile: Dockerfile.dbt
    container_name: dbt
    depends_on:
      - postgres
    volumes:
      - ~/.dbt:/root/.dbt
    environment:
      - DBT_PROFILES_DIR=/root/.dbt
    command: ["tail", "-f", "/dev/null"]

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: 12345678
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data

  mc:
    image: minio/mc
    container_name: minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      mc alias set myminio http://minio:9000 admin 12345678;
      mc mb myminio/bronze;
      mc mb myminio/silver;
      mc mb myminio/gold;
      mc policy set public myminio/bronze;
      mc policy set public myminio/silver;
      mc policy set public myminio/gold;
      exit 0;
      "

volumes:
  postgres_data:
  minio_data:
